{"ast":null,"code":"'use strict';\n/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\n\nclass CryptoProvider {\n  /**\n   * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n   * The output HMAC should be encoded in hexadecimal.\n   *\n   * Sample values for implementations:\n   * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n   * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n   */\n  computeHMACSignature(payload, secret) {\n    throw new Error('computeHMACSignature not implemented.');\n  }\n\n}\n\nmodule.exports = CryptoProvider;","map":{"version":3,"sources":["/Volumes/Time Machine Backups/Art/my-art/node_modules/stripe/lib/crypto/CryptoProvider.js"],"names":["CryptoProvider","computeHMACSignature","payload","secret","Error","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACA,MAAMA,cAAN,CAAqB;AACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,oBAAoB,CAACC,OAAD,EAAUC,MAAV,EAAkB;AACpC,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAXkB;;AAcrBC,MAAM,CAACC,OAAP,GAAiBN,cAAjB","sourcesContent":["'use strict';\n\n/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nclass CryptoProvider {\n  /**\n   * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n   * The output HMAC should be encoded in hexadecimal.\n   *\n   * Sample values for implementations:\n   * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n   * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n   */\n  computeHMACSignature(payload, secret) {\n    throw new Error('computeHMACSignature not implemented.');\n  }\n}\n\nmodule.exports = CryptoProvider;\n"]},"metadata":{},"sourceType":"script"}