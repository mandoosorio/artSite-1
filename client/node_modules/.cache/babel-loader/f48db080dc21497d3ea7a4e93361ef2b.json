{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osori\\\\OneDrive\\\\Desktop\\\\artSite-1\\\\client\\\\src\\\\pages\\\\contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react'; //import emailjs from 'emailjs-com';\n\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = \"service_nkazh0j\";\nconst TEMPLATE_ID = \"template_8cxz3se\";\nconst USER_ID = \"user_zAutm7UYCBSXMkVu3IaOs\";\n\nconst ContactForm = () => {\n  _s();\n\n  const [status, setStatus] = useState(\"Submit\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const {\n      name,\n      email,\n      message\n    } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(\"http://localhost:3000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID).then(result => {\n      console.log(result.text);\n      Swal.fire({\n        icon: 'success',\n        title: 'Message Sent Successfully'\n      });\n    }, error => {\n      console.log(error.text);\n      Swal.fire({\n        icon: 'error',\n        title: 'Ooops, something went wrong',\n        text: error.text\n      });\n    });\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contact me here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Main\",\n          style: {},\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-clear mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Return to Homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 85\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card \",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleOnSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              id: \"form-input-control-email\",\n              control: Input,\n              label: \"Email\",\n              name: \"reply_to\",\n              placeholder: \"Email\\u2026\",\n              required: true,\n              icon: \"mail\",\n              iconPosition: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              id: \"form-input-control-last-name\",\n              control: Input,\n              label: \"Name\",\n              name: \"from_name\",\n              placeholder: \"Name\\u2026\",\n              required: true,\n              icon: \"user circle\",\n              iconPosition: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              id: \"form-textarea-control-opinion\",\n              control: TextArea,\n              label: \"Message\",\n              name: \"message\",\n              placeholder: \"Message\\u2026\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"green\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ContactForm, \"qESKK7LDpFTuMSR0UrKu+hcLdmU=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/osori/OneDrive/Desktop/artSite-1/client/src/pages/contact.js"],"names":["React","useState","Link","Form","Input","TextArea","Button","Swal","SERVICE_ID","TEMPLATE_ID","USER_ID","ContactForm","status","setStatus","handleSubmit","e","preventDefault","name","email","message","target","elements","details","value","response","fetch","method","headers","body","JSON","stringify","result","json","alert","handleOnSubmit","emailjs","sendForm","then","console","log","text","fire","icon","title","error","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,mBAA9C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,UAAU,GAAG,iBAAnB;AACA,MAAMC,WAAW,GAAG,kBAApB;AACA,MAAMC,OAAO,GAAG,4BAAhB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,QAAD,CAApC;;AACA,QAAMa,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,YAAD,CAAT;AACA,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA2BJ,CAAC,CAACK,MAAF,CAASC,QAA1C;AACA,QAAIC,OAAO,GAAG;AACZL,MAAAA,IAAI,EAAEA,IAAI,CAACM,KADC;AAEZL,MAAAA,KAAK,EAAEA,KAAK,CAACK,KAFD;AAGZJ,MAAAA,OAAO,EAAEA,OAAO,CAACI;AAHL,KAAd;AAKA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiD;AAK1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALoD,KAAlC,CAA1B;AAOAT,IAAAA,SAAS,CAAC,QAAD,CAAT;AACA,QAAIkB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,KAAK,CAACF,MAAM,CAACnB,MAAR,CAAL;AACD,GAnBD;;AAoBA,QAAMsB,cAAc,GAAInB,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAmB,IAAAA,OAAO,CAACC,QAAR,CAAiB5B,UAAjB,EAA6BC,WAA7B,EAA0CM,CAAC,CAACK,MAA5C,EAAoDV,OAApD,EACG2B,IADH,CACSN,MAAD,IAAY;AAChBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,IAAnB;AACAjC,MAAAA,IAAI,CAACkC,IAAL,CAAU;AACRC,QAAAA,IAAI,EAAE,SADE;AAERC,QAAAA,KAAK,EAAE;AAFC,OAAV;AAID,KAPH,EAOMC,KAAD,IAAW;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACJ,IAAlB;AACAjC,MAAAA,IAAI,CAACkC,IAAL,CAAU;AACRC,QAAAA,IAAI,EAAE,OADE;AAERC,QAAAA,KAAK,EAAE,6BAFC;AAGRH,QAAAA,IAAI,EAAEI,KAAK,CAACJ;AAHJ,OAAV;AAKD,KAdH;AAeAzB,IAAAA,CAAC,CAACK,MAAF,CAASyB,KAAT;AACD,GAlBD;;AAqBA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BAGQ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAiB,UAAA,KAAK,EAAE,EAAxB;AAAA,iCAA4B;AAAS,YAAA,SAAS,EAAC,oBAAnB;AAAA,oCAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAIQ;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEX,cAAhB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,EAAE,EAAC,0BADP;AAEI,cAAA,OAAO,EAAE9B,KAFb;AAGI,cAAA,KAAK,EAAC,OAHV;AAII,cAAA,IAAI,EAAC,UAJT;AAKI,cAAA,WAAW,EAAC,aALhB;AAMI,cAAA,QAAQ,MANZ;AAOI,cAAA,IAAI,EAAC,MAPT;AAQI,cAAA,YAAY,EAAC;AARjB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,EAAE,EAAC,8BADP;AAEI,cAAA,OAAO,EAAEA,KAFb;AAGI,cAAA,KAAK,EAAC,MAHV;AAII,cAAA,IAAI,EAAC,WAJT;AAKI,cAAA,WAAW,EAAC,YALhB;AAMI,cAAA,QAAQ,MANZ;AAOI,cAAA,IAAI,EAAC,aAPT;AAQI,cAAA,YAAY,EAAC;AARjB;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAqBI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,EAAE,EAAC,+BADP;AAEI,cAAA,OAAO,EAAEC,QAFb;AAGI,cAAA,KAAK,EAAC,SAHV;AAII,cAAA,IAAI,EAAC,SAJT;AAKI,cAAA,WAAW,EAAC,eALhB;AAMI,cAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,oBArBJ,eA6BI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AA8CD,CAzFD;;GAAMM,W;;KAAAA,W;AA2FN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\n//import emailjs from 'emailjs-com';\nimport Swal from 'sweetalert2';\n\nconst SERVICE_ID = \"service_nkazh0j\";\nconst TEMPLATE_ID = \"template_8cxz3se\";\nconst USER_ID = \"user_zAutm7UYCBSXMkVu3IaOs\";\n\nconst ContactForm = () => {\n  const [status, setStatus] = useState(\"Submit\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const { name, email, message } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value,\n    };\n    let response = await fetch(\"http://localhost:3000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(details),\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\n      .then((result) => {\n        console.log(result.text);\n        Swal.fire({\n          icon: 'success',\n          title: 'Message Sent Successfully'\n        })\n      }, (error) => {\n        console.log(error.text);\n        Swal.fire({\n          icon: 'error',\n          title: 'Ooops, something went wrong',\n          text: error.text,\n        })\n      });\n    e.target.reset()\n  };\n\n\n  return (\n    <>\n    <div className=\"container-fluid\">\n        \n\n            <div className=\"cards row\">\n                <h3>Contact me here</h3>\n                <br />\n                <Link to=\"/Main\" style={{}}><button  className=\"btn btn-clear mb-3\"><h2>Return to Homepage</h2> </button></Link>\n                    <div className=\"card \">\n                        <Form onSubmit={handleOnSubmit}>\n                            <Form.Field\n                                id='form-input-control-email'\n                                control={Input}\n                                label='Email'\n                                name='reply_to'\n                                placeholder='Email…'\n                                required\n                                icon='mail'\n                                iconPosition='left'\n                            />\n                            <Form.Field\n                                id='form-input-control-last-name'\n                                control={Input}\n                                label='Name'\n                                name='from_name'\n                                placeholder='Name…'\n                                required\n                                icon='user circle'\n                                iconPosition='left'\n                            />\n                            <Form.Field\n                                id='form-textarea-control-opinion'\n                                control={TextArea}\n                                label='Message'\n                                name='message'\n                                placeholder='Message…'\n                                required\n                            />\n                            <Button type='submit' color='green'>Submit</Button>\n                        </Form>\n                    </div>\n            </div>\n        </div>\n    </>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}