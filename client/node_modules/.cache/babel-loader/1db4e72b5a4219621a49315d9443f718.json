{"ast":null,"code":"'use strict';\n/**\n * Encapsulates the logic for issuing a request to the Stripe API. This is an\n * experimental interface and is not yet stable.\n */\n\nclass HttpClient {\n  /** The client name used for diagnostics. */\n  getClientName() {\n    throw new Error('getClientName not implemented.');\n  }\n\n  makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n    throw new Error('makeRequest not implemented.');\n  }\n  /** Helper to make a consistent timeout error across implementations. */\n\n\n  static makeTimeoutError() {\n    const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n    return timeoutErr;\n  }\n\n}\n\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\n\nclass HttpClientResponse {\n  constructor(statusCode, headers) {\n    this._statusCode = statusCode;\n    this._headers = headers;\n  }\n\n  getStatusCode() {\n    return this._statusCode;\n  }\n\n  getHeaders() {\n    return this._headers;\n  }\n\n  getRawResponse() {\n    throw new Error('getRawResponse not implemented.');\n  }\n\n  toStream(streamCompleteCallback) {\n    throw new Error('toStream not implemented.');\n  }\n\n  toJSON() {\n    throw new Error('toJSON not implemented.');\n  }\n\n}\n\nmodule.exports = {\n  HttpClient,\n  HttpClientResponse\n};","map":{"version":3,"sources":["/Volumes/Time Machine Backups/Art/my-art/node_modules/stripe/lib/net/HttpClient.js"],"names":["HttpClient","getClientName","Error","makeRequest","host","port","path","method","headers","requestData","protocol","timeout","makeTimeoutError","timeoutErr","TypeError","TIMEOUT_ERROR_CODE","code","HttpClientResponse","constructor","statusCode","_statusCode","_headers","getStatusCode","getHeaders","getRawResponse","toStream","streamCompleteCallback","toJSON","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACA,MAAMA,UAAN,CAAiB;AACf;AACAC,EAAAA,aAAa,GAAG;AACd,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAEDC,EAAAA,WAAW,CACTC,IADS,EAETC,IAFS,EAGTC,IAHS,EAITC,MAJS,EAKTC,OALS,EAMTC,WANS,EAOTC,QAPS,EAQTC,OARS,EAST;AACA,UAAM,IAAIT,KAAJ,CAAU,8BAAV,CAAN;AACD;AAED;;;AACuB,SAAhBU,gBAAgB,GAAG;AACxB,UAAMC,UAAU,GAAG,IAAIC,SAAJ,CAAcd,UAAU,CAACe,kBAAzB,CAAnB;AACAF,IAAAA,UAAU,CAACG,IAAX,GAAkBhB,UAAU,CAACe,kBAA7B;AACA,WAAOF,UAAP;AACD;;AAxBc;;AA2BjBb,UAAU,CAACe,kBAAX,GAAgC,WAAhC;;AAEA,MAAME,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAACC,UAAD,EAAaX,OAAb,EAAsB;AAC/B,SAAKY,WAAL,GAAmBD,UAAnB;AACA,SAAKE,QAAL,GAAgBb,OAAhB;AACD;;AAEDc,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKF,WAAZ;AACD;;AAEDG,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKF,QAAZ;AACD;;AAEDG,EAAAA,cAAc,GAAG;AACf,UAAM,IAAItB,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAEDuB,EAAAA,QAAQ,CAACC,sBAAD,EAAyB;AAC/B,UAAM,IAAIxB,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,UAAM,IAAIzB,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAxBsB;;AA2BzB0B,MAAM,CAACC,OAAP,GAAiB;AAAC7B,EAAAA,UAAD;AAAaiB,EAAAA;AAAb,CAAjB","sourcesContent":["'use strict';\n\n/**\n * Encapsulates the logic for issuing a request to the Stripe API. This is an\n * experimental interface and is not yet stable.\n */\nclass HttpClient {\n  /** The client name used for diagnostics. */\n  getClientName() {\n    throw new Error('getClientName not implemented.');\n  }\n\n  makeRequest(\n    host,\n    port,\n    path,\n    method,\n    headers,\n    requestData,\n    protocol,\n    timeout\n  ) {\n    throw new Error('makeRequest not implemented.');\n  }\n\n  /** Helper to make a consistent timeout error across implementations. */\n  static makeTimeoutError() {\n    const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n    return timeoutErr;\n  }\n}\n\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\n\nclass HttpClientResponse {\n  constructor(statusCode, headers) {\n    this._statusCode = statusCode;\n    this._headers = headers;\n  }\n\n  getStatusCode() {\n    return this._statusCode;\n  }\n\n  getHeaders() {\n    return this._headers;\n  }\n\n  getRawResponse() {\n    throw new Error('getRawResponse not implemented.');\n  }\n\n  toStream(streamCompleteCallback) {\n    throw new Error('toStream not implemented.');\n  }\n\n  toJSON() {\n    throw new Error('toJSON not implemented.');\n  }\n}\n\nmodule.exports = {HttpClient, HttpClientResponse};\n"]},"metadata":{},"sourceType":"script"}